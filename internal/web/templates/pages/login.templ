package pages

import (
	buttonc "github.com/coreycole/datastarui/components/button"
	formc "github.com/coreycole/datastarui/components/form"
	inputc "github.com/coreycole/datastarui/components/input"
	"github.com/cr1cr1/farm-manager/internal/web/templates/layouts"
)

// LoginContent is the fragment (no layout) containing the login form.
templ LoginContent(basePath string, csrf string, errs map[string]string, username string) {
	<section class="card">
		<h2>Sign in</h2>
		if errs["form"] != "" {
			<div class="alert alert-danger">{ errs["form"] }</div>
		}
		@formc.Form(formc.FormArgs{
			ID:     "login_form",
			Action: basePath + "/login",
		}) {
			<input type="hidden" name="csrf_token" value={ csrf }/>
			@formc.FormItem(formc.FormItemArgs{}) {
				@formc.FormLabel(formc.FormLabelArgs{
					For:      "username",
					HasError: errs["username"] != "",
				}) {
					Username
				}
				@inputc.Input(inputc.InputArgs{
					Type: "text",
					ID:   "username",
					Name: "username",
					Attributes: templ.Attributes{
						"autocomplete": "username",
						"value":        username,
					},
				})
				@formc.FormMessage(formc.FormMessageArgs{
					ID:      "msg-username",
					Message: errs["username"],
				})
			}
			@formc.FormItem(formc.FormItemArgs{}) {
				@formc.FormLabel(formc.FormLabelArgs{
					For:      "password",
					HasError: errs["password"] != "",
				}) {
					Password
				}
				@inputc.Input(inputc.InputArgs{
					Type:       "password",
					ID:         "password",
					Name:       "password",
					Attributes: templ.Attributes{"autocomplete": "current-password"},
				})
				@formc.FormMessage(formc.FormMessageArgs{
					ID:      "msg-password",
					Message: errs["password"],
				})
			}
			<div class="actions">
				@buttonc.Button(buttonc.ButtonArgs{
					Type:    "submit",
					Variant: "default",
				}) {
					Login
				}
			</div>
		}
	</section>
}

// LoginPage composes BaseLayout + LoginContent for initial full-page load (no nav).
templ LoginPage(basePath string, title string, csrf string, errs map[string]string, username string) {
	@layouts.Root(basePath, title, false, csrf) {
		@LoginContent(basePath, csrf, errs, username)
	}
}
