package layouts

import (
	themetoggle "github.com/cr1cr1/farm-manager/internal/web/templates/components/themetoggle"
	"path/filepath"
	"time"
)

// Root provides the shared HTML skeleton.
templ Root(basePath string, title string, showNav bool, csrf string, userTheme int) {
	{{
		// Find the hashed CSS file
		cssFile := "/public/css/app.css" // fallback
		if files, err := filepath.Glob("public/css/app.*.css"); err == nil && len(files) > 0 {
			// Extract just the filename from the full path
			fileName := filepath.Base(files[0])
			cssFile = "/public/css/" + fileName
		}

		// Determine which tab is active based on the title
		isDashboardActive := title == "Dashboard" || title == "Farm Manager"
		isProfileActive := title == "Profile"
	}}
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<title>{ title }</title>
			<link rel="stylesheet" href={ cssFile }/>
			<link rel="icon" type="image/x-icon" href="/public/img/favicon.ico"/>
			<!-- PWA Manifest -->
			<link rel="manifest" href="/public/manifest.json"/>
			<!-- Apple PWA Support -->
			<meta name="mobile-web-app-capable" content="yes"/>
			<meta name="mobile-web-app-capable-status-bar-style" content="default"/>
			<meta name="mobile-web-app-capable-title" content="Farm Manager"/>
			<!-- Apple Touch Icons -->
			<link rel="apple-touch-icon" href="/public/img/apple-touch-icon.png"/>
			<link rel="apple-touch-icon" sizes="180x180" href="/public/img/apple-touch-icon.png"/>
			<!-- Popover API Polyfill -->
			<script type="module">
				if (!('popover' in HTMLElement.prototype)) {
					console.log('Loading Popover API polyfill...');
					import("https://cdn.jsdelivr.net/npm/@oddbird/popover-polyfill@latest");
				}
			</script>
			<!-- CSS Anchor Positioning Polyfill -->
			<script type="module">
				if (!("anchorName" in document.documentElement.style)) {
					console.log('üîß CSS Anchor Positioning is not natively supported');
					console.log('üì¶ Loading CSS Anchor Positioning polyfill from jsDelivr...');
					window.CSS_ANCHOR_POLYFILL_LOADING = true;

					import("https://cdn.jsdelivr.net/npm/@oddbird/css-anchor-positioning@latest/dist/css-anchor-positioning.js")
						.then(() => {
							console.log('‚úÖ CSS Anchor Positioning polyfill loaded successfully!');
							window.CSS_ANCHOR_POLYFILL_LOADED = true;
							window.CSS_ANCHOR_POLYFILL_LOADING = false;

							// Dispatch custom event to notify components
							window.dispatchEvent(new CustomEvent('css-anchor-polyfill-loaded'));
						})
						.catch((error) => {
							console.error('‚ùå Failed to load CSS Anchor Positioning polyfill:', error);
							window.CSS_ANCHOR_POLYFILL_LOADING = false;
						});
				} else {
					console.log('‚úÖ CSS Anchor Positioning is natively supported - no polyfill needed');
					window.CSS_ANCHOR_POLYFILL_LOADED = false;
				}
			</script>
			<!-- Theme initialization -->
			<script>
				// Initialize theme from user preference, localStorage, or system preference
				function initTheme() {
					let userTheme = {{ userTheme }};
					let savedTheme = localStorage.getItem('theme');

					// Check if user has a saved preference from database
					if (userTheme && userTheme !== 0) {
						const userThemeMap = {0: 'system', 1: 'dark', 2: 'light'};
						savedTheme = userThemeMap[userTheme] || 'system';
						// Update localStorage to match user's preference
						localStorage.setItem('theme', savedTheme);
					}

					const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
					const effectiveTheme = savedTheme === 'system' ? (systemPrefersDark ? 'dark' : 'light') : (savedTheme || (systemPrefersDark ? 'dark' : 'light'));
					document.documentElement.classList.toggle('dark', effectiveTheme === 'dark');
					return savedTheme || 'system';
				}

				// Set initial theme before page renders
				initTheme();
			</script>
			<!-- Enable View Transitions API -->
			<meta name="view-transition" content="same-origin"/>
		</head>
		<body class="min-h-screen bg-background font-sans antialiased" data-signals="{theme: initTheme()}">
			<div class="relative flex min-h-screen flex-col bg-background">
				<div data-wrapper="" class="border-grid flex flex-1 flex-col">
					<!-- Header -->
					<header class="border-grid sticky top-0 z-50 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60">
						<div class="container-wrapper">
							<div class="container h-14 flex flex-row items-center justify-between">
								<div class="flex flex-row items-center gap-3">
									<a class="flex items-center no-underline pb-[0.5px]" href={ basePath }>
										<span class="font-semibold text-foreground inline-flex items-center">Farm Manager</span>
									</a>
									if showNav {
										<div class="bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px] ml-6">
											<a class={ "text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 hover:bg-background hover:text-foreground", templ.KV("bg-background", isDashboardActive), templ.KV("text-foreground", isDashboardActive), templ.KV("shadow-sm", isDashboardActive) } href={ basePath }>
												Dashboard
											</a>
											<a class={ "text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 hover:bg-background hover:text-foreground", templ.KV("bg-background", isProfileActive), templ.KV("text-foreground", isProfileActive), templ.KV("shadow-sm", isProfileActive) } href={ basePath + "/profile" }>
												Profile
											</a>
										</div>
									}
								</div>
								<div class="flex items-center space-x-2">
									<nav class="flex items-center space-x-1">
										@themetoggle.ThemeToggle(themetoggle.ThemeToggleArgs{})
									</nav>
									if showNav {
										<form method="post" action={ basePath + "/logout" } class="logout-form">
											<input type="hidden" name="csrf_token" value={ csrf }/>
											<button type="submit" class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80 h-9 px-4 py-2">Logout</button>
										</form>
									}
								</div>
							</div>
						</div>
					</header>
					<main class="flex flex-1 flex-col">
						<div class="container-wrapper flex flex-1">
							<div class="container mx-auto px-4 py-6 md:px-8">
								{ children... }
							</div>
						</div>
					</main>
					<footer class="footer border-t bg-background/95">
						<div class="container-wrapper">
							<div class="container px-4 py-4">
								<p class="text-sm text-muted-foreground">&copy; { time.Now().Year() } Farm Manager</p>
							</div>
						</div>
					</footer>
				</div>
			</div>
			<script type="module" src="https://cdn.jsdelivr.net/gh/starfederation/datastar@main/bundles/datastar.js"></script>
			<script src="/public/js/app.js"></script>
		</body>
	</html>
}
